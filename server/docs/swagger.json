{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Water tracker app",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of water tracker app"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://projectwatertrackerteam4.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "User",
      "description": "User operations."
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register new user",
        "description": "This endpoint creates a new user.",
        "operationId": "signupUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "description": "User's email.",
                    "type": "string",
                    "format": "email",
                    "example": "johndoe@mail.com"
                  },
                  "password": {
                    "description": "User's password.",
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 64,
                    "example": "P@ssword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully registered a user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully registered a user!"
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "user"
                      ],
                      "properties": {
                        "user": {
                          "type": "object",
                          "required": [
                            "email"
                          ],
                          "properties": {
                            "email": {
                              "type": "string",
                              "description": "User's email.",
                              "example": "johndoe@mail.com"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/verify": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Verify user's account",
        "description": "This endpoint verifies a user account via a token and redirects to the success page.",
        "operationId": "verifyAccount",
        "security": [],
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Verification token sent to the user.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account verified successfully, user is redirected.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Account verified successfully! User is being redirected."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User login",
        "description": "Authenticate a user and return an access token along with user details.",
        "operationId": "loginUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "user@example.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 64,
                    "format": "password",
                    "example": "StrongP@ssw0rd"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in an user.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in an user!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        },
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "675d7c92d8489ab3f0b3b7ed"
                            },
                            "name": {
                              "type": "string",
                              "example": "John Doe"
                            },
                            "email": {
                              "type": "string",
                              "example": "user@example.com"
                            },
                            "gender": {
                              "type": "string",
                              "enum": [
                                "female",
                                "male"
                              ],
                              "default": "female",
                              "example": "female"
                            },
                            "dailyNorma": {
                              "type": "number",
                              "example": 2000
                            },
                            "avatarUrl": {
                              "type": "string",
                              "example": "http://example.com/avatar.jpg"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout the user",
        "description": "Logs out the user and clears the session",
        "operationId": "logoutUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully logged out, session cleared"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh user session",
        "description": "Refreshes the user's session using the refresh token from cookies.",
        "operationId": "refreshUserSession",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully refreshed session",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully refreshed a session!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "description": "The new access token."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/send-reset-email": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Send a password reset email",
        "description": "Sends a password reset email to the user with a reset link.",
        "operationId": "requestResetEmail",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The email address of the user requesting the password reset."
                  }
                },
                "required": [
                  "email"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Reset password email has been successfully sent",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Reset password email has been successfully sent!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/reset-pwd": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Reset user password",
        "description": "Allows the user to reset their password using a valid reset token.",
        "operationId": "resetPassword",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 64,
                    "description": "The new password for the user."
                  },
                  "token": {
                    "type": "string",
                    "description": "The reset token sent to the user's email for resetting the password."
                  }
                },
                "required": [
                  "password",
                  "token"
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password has been successfully reset",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Password has been successfully reset!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {}
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/get-oauth-url": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get Google OAuth URL",
        "description": "Returns the Google OAuth URL that the user can visit to authenticate via Google.",
        "operationId": "getGoogleOAuthUrl",
        "security": [],
        "responses": {
          "200": {
            "description": "Successfully retrieved Google OAuth URL",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully get Google OAuth url!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string",
                          "example": "https://accounts.google.com/o/oauth2/v2/auth?..."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/auth/confirm-oauth": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Confirm Google OAuth and Log In or Sign Up",
        "description": "Confirms the Google OAuth code and either logs in or signs up the user based on the code received from Google.",
        "operationId": "loginWithGoogleOAuth",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "The OAuth code received from Google after user authentication.",
                    "example": "4/0AX4XfWhJjh5rZ-8l3_lXX8Hr0VK0A7k5Fzss8DS0GsTpUE44xnbp4XYu-0S9_w7GZX0GAw"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully logged in or signed up via Google OAuth",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully logged in via Google OAuth!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "accessToken": {
                          "type": "string",
                          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get user by ID",
        "description": "Retrieve the details of a user by their unique ID.",
        "operationId": "getUserById",
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier of the user."
          }
        ],
        "responses": {
          "200": {
            "description": "User retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "User retrieved successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "1234567890abcdef12345678"
                            },
                            "email": {
                              "type": "string",
                              "example": "user@example.com"
                            },
                            "name": {
                              "type": "string",
                              "example": "John Doe"
                            },
                            "gender": {
                              "type": "string",
                              "enum": [
                                "female",
                                "male"
                              ],
                              "default": "female",
                              "example": "female"
                            },
                            "dailyNorm": {
                              "type": "number",
                              "example": 2000
                            },
                            "avatarUrl": {
                              "type": "string",
                              "example": "https://res.cloudinary.com/demo/image/upload/v1616161616/sample.jpg"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "patch": {
        "tags": [
          "User"
        ],
        "summary": "Update user information by ID",
        "description": "Update the details of a user by their unique ID. Allows updating fields such as name, email, password, gender, daily norm, and avatar.",
        "operationId": "updateUserInformation",
        "security": [],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The unique identifier of the user."
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "maxLength": 12,
                    "example": "Jane Doe"
                  },
                  "email": {
                    "type": "string",
                    "pattern": "^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+.[a-zA-Z]{2,}$",
                    "example": "jane.doe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "maxLength": 64,
                    "example": "StrongPassword123!"
                  },
                  "gender": {
                    "type": "string",
                    "enum": [
                      "female",
                      "male"
                    ],
                    "default": "female",
                    "example": "female"
                  },
                  "dailyNorm": {
                    "type": "integer",
                    "minimum": 50,
                    "maximum": 5000,
                    "default": 2000,
                    "example": 2000
                  },
                  "avatarUrl": {
                    "type": "string",
                    "format": "uri",
                    "example": "https://res.cloudinary.com/demo/image/upload/v1616161616/sample.jpg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User information updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "User information updated successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "updatedUser": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "example": "1234567890abcdef12345678"
                            },
                            "email": {
                              "type": "string",
                              "example": "jane.doe@example.com"
                            },
                            "name": {
                              "type": "string",
                              "example": "Jane Doe"
                            },
                            "gender": {
                              "type": "string",
                              "enum": [
                                "female",
                                "male"
                              ],
                              "default": "female",
                              "example": "female"
                            },
                            "dailyNorm": {
                              "type": "number",
                              "example": 2000
                            },
                            "avatarUrl": {
                              "type": "string",
                              "example": "https://res.cloudinary.com/demo/image/upload/v1616161616/sample.jpg"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/day/{date}": {
      "get": {
        "tags": [
          "Water"
        ],
        "summary": "Get water records by day",
        "description": "This endpoint retrieves water records for a given date.",
        "operationId": "getWaterByDate",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "date",
            "in": "path",
            "description": "The date for which to retrieve the water records (ISO format YYYY-MM-DD).",
            "required": true,
            "schema": {
              "type": "string",
              "example": "2024-12-16"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved the water records for the given date.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully found water records by this date."
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "waterRecords",
                        "recordsCount",
                        "totalDayWater",
                        "percentage"
                      ],
                      "properties": {
                        "waterRecords": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "required": [
                              "_id",
                              "userId",
                              "date",
                              "amount",
                              "currentDailyNorm"
                            ],
                            "properties": {
                              "_id": {
                                "type": "string",
                                "description": "Unique identifier for the water record.",
                                "example": "64f5b992c4b3f1567e63a179"
                              },
                              "userId": {
                                "type": "string",
                                "description": "ID of the user who logged the water record.",
                                "example": "64f5b992c4b3f1567e63a178"
                              },
                              "date": {
                                "type": "string",
                                "format": "date-time",
                                "description": "The date and time of the water consumption record.",
                                "example": "2024-12-16T08:30:00Z"
                              },
                              "amount": {
                                "type": "number",
                                "description": "The amount of water consumed (in milliliters).",
                                "example": 300
                              },
                              "currentDailyNorm": {
                                "type": "number",
                                "description": "The current daily water consumption norm for the user (in milliliters).",
                                "example": 2000
                              }
                            }
                          }
                        },
                        "recordsCount": {
                          "type": "integer",
                          "description": "The number of records found for the given date.",
                          "example": 3
                        },
                        "totalDayWater": {
                          "type": "number",
                          "description": "The total amount of water consumed for the given date (in milliliters).",
                          "example": 900
                        },
                        "percentage": {
                          "type": "integer",
                          "description": "The percentage of the daily water consumption norm met for the given date.",
                          "example": 45
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "No records found for the given date.",
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water": {
      "post": {
        "tags": [
          "Water"
        ],
        "summary": "Add water record",
        "description": "This endpoint creates a new water record for registered user",
        "operationId": "postWaterRecord",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "date",
                  "amount"
                ],
                "properties": {
                  "date": {
                    "description": "The date and time of the water consumption record.",
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-12-16T08:30:00Z"
                  },
                  "amount": {
                    "description": "The amount of water consumed (in milliliters).",
                    "type": "number",
                    "minimum": 50,
                    "maximum": 5000,
                    "example": 250
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successfully added the water record.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data",
                    "accessToken"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully added the water record."
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "_id",
                        "userId",
                        "date",
                        "amount",
                        "currentDailyNorm"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "Unique identifier for the water record.",
                          "example": "64f5b992c4b3f1567e63a179"
                        },
                        "userId": {
                          "type": "string",
                          "description": "ID of the user who logged the water record.",
                          "example": "64f5b992c4b3f1567e63a178"
                        },
                        "date": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The date and time of the water consumption record.",
                          "example": "2024-12-16T08:30:00Z"
                        },
                        "amount": {
                          "type": "number",
                          "description": "The amount of water consumed (in milliliters).",
                          "example": 250
                        },
                        "currentDailyNorm": {
                          "type": "number",
                          "description": "The current daily water consumption norm for the user (in milliliters).",
                          "example": 2000
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    },
    "/water/{id}": {
      "patch": {
        "tags": [
          "Water"
        ],
        "summary": "Update water record by ID",
        "description": "This endpoint updates an existing water record for the user.",
        "operationId": "patchWaterRecord",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the water record to update.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "64f5b992c4b3f1567e63a179"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "date": {
                    "description": "The updated date and time of the water consumption record.",
                    "type": "string",
                    "format": "date-time",
                    "example": "2024-12-16T09:00:00Z"
                  },
                  "amount": {
                    "description": "The updated amount of water consumed (in milliliters).",
                    "type": "number",
                    "minimum": 50,
                    "maximum": 5000,
                    "example": 300
                  }
                },
                "additionalProperties": false
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successfully updated the water record.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated the water record."
                    },
                    "data": {
                      "type": "object",
                      "required": [
                        "_id",
                        "userId",
                        "date",
                        "amount",
                        "currentDailyNorm"
                      ],
                      "properties": {
                        "_id": {
                          "type": "string",
                          "description": "Unique identifier for the water record.",
                          "example": "64f5b992c4b3f1567e63a179"
                        },
                        "userId": {
                          "type": "string",
                          "description": "ID of the user who logged the water record.",
                          "example": "64f5b992c4b3f1567e63a178"
                        },
                        "date": {
                          "type": "string",
                          "format": "date-time",
                          "description": "The updated date and time of the water consumption record.",
                          "example": "2024-12-16T09:00:00Z"
                        },
                        "amount": {
                          "type": "number",
                          "description": "The updated amount of water consumed (in milliliters).",
                          "example": 300
                        },
                        "currentDailyNorm": {
                          "type": "number",
                          "description": "The current daily water consumption norm for the user (in milliliters).",
                          "example": 2000
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Water record not found.",
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      },
      "delete": {
        "tags": [
          "Water"
        ],
        "summary": "Delete water record",
        "description": "This endpoint deletes an existing water record for the user by ID.",
        "operationId": "deleteWaterRecord",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the water record to delete.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "64f5b992c4b3f1567e63a179"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted the water record.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully deleted the water record."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "description": "Water record not found.",
            "$ref": "#/components/responses/404"
          },
          "500": {
            "$ref": "#/components/responses/500"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request - Validation Error or Incorrect Input",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Validation Error! Invalid request body or parameters."
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Invalid input data"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not Found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "The requested resource was not found!"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict - Email already in use",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "description": "HTTP status code indicating a conflict",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "description": "Explanation of the conflict",
                  "example": "Email in use!"
                }
              }
            }
          }
        }
      },
      "500": {
        "description": "Internal Server Error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "error"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 500
                },
                "message": {
                  "type": "string",
                  "example": "InternalServerError"
                },
                "error": {
                  "type": "string",
                  "description": "Detailed error message for debugging purposes.",
                  "example": "Unexpected database error occurred"
                }
              }
            }
          }
        }
      }
    }
  }
}